<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>b</string>
	</array>
	<key>name</key>
	<string>DCPUB</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*#\s*(undef|ifdef|ifndef|endif)\s+([A-Za-z\_]\w*)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.preprocessor.dcpub</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.preprocessor.dcpub</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>preprocessor directives with one macro argument</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.preprocessor.dcpub</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*#\s*(endif)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.preprocessor.dcpub</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>preprocessor directives with no arguments</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*#\s*(include)\s+(.*)$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.preprocessor.dcpub</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.unquoted.include-path.dcpub</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>include preprocessor directive</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*#\s*(define)\s+([A-Za-z\_]\w*)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.preprocessor.dcpub</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.preprocessor.dcpub</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>define preprocessor directive</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>control keyword</string>
			<key>match</key>
			<string>\b(if|else|while|break|return|goto)\b</string>
			<key>name</key>
			<string>keyword.control.dcpub</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>variable declaration keyword</string>
			<key>match</key>
			<string>\b(local|static|extern)\b</string>
			<key>name</key>
			<string>storage.modifier.dcpub</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(function)\s+([A-Za-z\_]\w*)\s*\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.dcpub</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.dcpub</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>function declaration</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>meta.function-declaration.dcpub</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cast</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b([A-Za-z\_]\w*)\b</string>
					<key>name</key>
					<string>variable.parameter.dcpub</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(struct)\s+([A-Za-z\_]\w*)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.dcpub</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.dcpub</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>structure declaration</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.structure-declaration.dcpub</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cast</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.label.dcpub</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>label (heuristic means of distinguishing them from casts)</string>
			<key>match</key>
			<string>(?:(?&lt;=\{|;|^)\s*)(:\s*[A-Za-z\_]\w*)</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(asm)\s*\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.asm.dcpub</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>assembly block (currently assembly is lumped together into a 'string')</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.asm-block.dcpub</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.language.register.dcpub</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.dcpub</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([ABCXYZIJabcxyzij])\s*(=)</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\{)</string>
					<key>end</key>
					<string>(?=\})</string>
					<key>name</key>
					<string>string.other.asm.dcpub</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>assignments and function calls</string>
			<key>include</key>
			<string>#expression</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>cast</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.dcpub</string>
						</dict>
					</dict>
					<key>match</key>
					<string>:\s*([A-Za-z\_]\w*)\b</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>\]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.dcpub</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\*/.*\n</string>
					<key>name</key>
					<string>invalid.illegal.stray-comment-end.dcpub</string>
				</dict>
				<dict>
					<key>match</key>
					<string>//.*\n</string>
					<key>name</key>
					<string>comment.line.double-slash.dcpub</string>
				</dict>
			</array>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.any-method.dcpub</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([A-Za-z\_]\w*)\s*\(</string>
					<key>name</key>
					<string>meta.function-call.dcpub</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bsizeof\b</string>
					<key>name</key>
					<string>keyword.operator.sizeof.dcpub</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cast</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(0[Xx][0-9a-fA-F]+|0[Bb][01]+|[0-9]+)\b</string>
					<key>name</key>
					<string>constant.numeric.dcpub</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\"</string>
					<key>end</key>
					<string>\"</string>
					<key>name</key>
					<string>string.quoted.double.dcpub</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-escaped-char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\'</string>
					<key>end</key>
					<string>\'</string>
					<key>name</key>
					<string>string.quoted.single.dcpub</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-escaped-char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(([*+\-&amp;|^=!]|-?[&gt;&lt;/%]|&lt;&lt;|&gt;&gt;)=?)</string>
					<key>name</key>
					<string>keyword.operator.dcpub</string>
				</dict>
			</array>
		</dict>
		<key>string-escaped-char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>https://github.com/Alxandr/Irony/blob/01f2cdda330db8381d7b2eca088fc6c64992a6dc/Irony/Parsing/Terminals/StringLiteral.cs#L340</string>
					<key>match</key>
					<string>\\([abtnvfr"'\\ \n]|[0-7]{,2}|u\h{,4}|U\h{,8}|x\h{,2})</string>
					<key>name</key>
					<string>constant.character.escape.dcpub</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.dcpub</string>
	<key>uuid</key>
	<string>65084526-1b13-4763-bde7-6c296b4b7ac4</string>
</dict>
</plist>
